---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: kubesail-agent
  labels: { app: kubesail-agent }

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: kubesail-agent
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cluster-admin
subjects:
  - kind: ServiceAccount
    name: kubesail-agent
    namespace: default
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kubesail-agent
spec:
  selector:
    matchLabels:
      app: kubesail-agent
      tier: service
  minReadySeconds: 0
  strategy:
    type: Recreate
  replicas: 1
  template:
    metadata:
      annotations:
        prometheus.io/port: "5000"
        prometheus.io/scrape: "true"
        container.apparmor.security.beta.kubernetes.io/agent: "unconfined"
      labels:
        app: kubesail-agent
        tier: service
    spec:
      serviceAccountName: kubesail-agent
      containers:
        - name: agent
          image: kubesail/agent
          imagePullPolicy: IfNotPresent
          command: ["/home/node/app/bin/node.sh", "agent"]
          ports:
            - name: metrics
              containerPort: 5000
            - name: http
              containerPort: 6000
          env:
            - name: GET_HOSTS_FROM
              value: dns
            - name: LOG_LEVEL
              value: debug
            - name: LOGGING_LABEL
              value: kubesail-agent
            - name: NODE_ENV
              value: development
            - name: NODE_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.hostIP
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
          resources:
            requests:
              cpu: 50m
              memory: 100Mi
            limits:
              cpu: "2"
              memory: 1500Mi
          volumeMounts:
            - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
              name: kube-api-access
              readOnly: true
            - mountPath: /host/run/dbus
              name: host-dbus
      volumes:
        - hostPath:
            path: /run/dbus
            type: DirectoryOrCreate
          name: host-dbus
        - name: kube-api-access
          projected:
            defaultMode: 420
            sources:
              - serviceAccountToken:
                  expirationSeconds: 600
                  path: token
              - configMap:
                  items:
                    - key: ca.crt
                      path: ca.crt
                  name: kube-root-ca.crt
              - downwardAPI:
                  items:
                    - fieldRef:
                        apiVersion: v1
                        fieldPath: metadata.namespace
                      path: namespace
